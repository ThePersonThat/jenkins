@Library('pipelineLib') _

pipeline {
    agent any

    options {
        skipDefaultCheckout()
    }

    stages {
        stage('Stop running builds for the branch') {
            steps {
                stopRunningBuilds()
            }
        }

        stage('Wipe workspace and checkout') {
            steps {
                checkoutCurrentBranch()
            }
        }

        stage('Analyze') {
            stages {
                stage("Tests") {
                    steps {
                        withChecks('Run tests') {
                            runTests()
                        }
                    }

                    post {
                        unstable {
                            error("Some tests were not passed")
                        }
                    }
                }

                stage("Checkstyle") {
                    steps {
                        withChecks('Analyze checkstyle') {
                            runCheckstyle()
                        }
                    }
                }
            }
        }

        stage('Test') {
            steps {
                echo 'Test'
            }
        }
    }
}