@Library('pipelineLib') _

pipeline {
    agent any

    options {
        skipDefaultCheckout()
    }

    stages {
        stage('Stop running builds for the branch') {
            steps {
                stopRunningBuilds()
            }
        }

        stage('Wipe workspace and checkout') {
            steps {
                checkoutCurrentBranch()
            }
        }

        stage('Analyze') {
            steps {
                withChecks('Analyze checkstyle') {
                    runCheckstyle()
                }

                withChecks('Run tests') {
                    runTests()
                }
            }

            post {
                always {
                    sh "test 1 != 1"
                }
            }
        }

        stage('Test') {
            steps {
                echo 'Test'
            }
        }
    }
}